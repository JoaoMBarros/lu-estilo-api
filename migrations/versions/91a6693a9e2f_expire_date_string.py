"""expire_date string

Revision ID: 91a6693a9e2f
Revises: e3a5c29e281c
Create Date: 2024-06-19 23:05:51.761439

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '91a6693a9e2f'
down_revision: Union[str, None] = 'e3a5c29e281c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'expire_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('products', 'expire_date',
               existing_type=sa.String(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('orders', 'created_at',
               existing_type=sa.String(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
